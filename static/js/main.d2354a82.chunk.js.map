{"version":3,"sources":["store/actions/auth.js","store/actions/actionTypes.js","screens/Authorization/Authorization.js","UI components/Navbar/Navbar.js","UI components/Navbar/NavbarRender.js","UI components/Table/Table.js","UI components/Table/TableRow.js","store/actions/table.js","screens/MainTable/MainTable.js","UI components/Input/Input.js","helperFunctions/forms.js","screens/AddTranslation/AddTranslation.js","store/actions/add.js","store/actions/edit.js","screens/EditTranslation/EditTranslation.js","App.js","serviceWorker.js","store/reducers/table.js","store/reducers/add.js","store/reducers/edit.js","store/reducers/auth.js","store/reducers/rootReducer.js","index.js"],"names":["fetchNavSuccess","rolesData","type","changeRoleSuccess","newRolesData","choiceRoleSuccess","Authorization","choiceRoleHandler","event","role","target","getAttribute","props","choiceRole","className","style","to","onClick","this","data-role-choice","React","Component","connect","state","roles","auth","dispatch","a","async","moderator","editor","axios","put","then","response","data","catch","error","console","log","Navbar","isHideRole","id","data-toggle","aria-haspopup","aria-expanded","currentRole","aria-labelledby","moderatorActive","changeRole","data-role","editorActive","NavbarRender","changeRoleHandler","newRole","fetchNav","newRoleData","get","Table","scope","tableRows","TableRow","translateKey","translateRu","translateEng","isTranslateDone","translateDate","data-target-key","onClickEdit","onClickDelete","fetchTableSuccess","arr","arrKeys","translateTableData","translateTableDataKeys","deleteFromTable","clickTarget","deleteItemIndex","targetData","forEach","item","index","key","deleteItemKey","delete","Object","values","keys","deleteTableItem","MainTable","deleteHandler","renderRows","map","row","ru","eng","date","length","editHandler","renderAddBtn","fetchTable","document","querySelectorAll","element","remove","Fragment","table","Input","htmlFor","label","placeholder","value","onChange","readOnly","isDisabled","data-placement","title","titleTooltip","required","onChangeKeyInput","keyInput","querySelector","classList","hasAttribute","test","add","nextSibling","innerHTML","onChangeRuInput","translateRuInput","trim","onChangeEngInput","translateEngInput","AddTranslation","renderInputs","inputsData","input","showAlert","left","right","marginLeft","marginRight","width","checkSubmitHandler","preventDefault","contains","addNewWord","window","$","tooltip","isShowAlert","noValidate","timeAdjustment","time","translateKeyInput","Date","getHours","getMinutes","getSeconds","getDate","getMonth","getFullYear","newWord","isDone","post","setTimeout","fetchEditInputsDataSuccess","newInputsEditData","inputsEditData","EditTranslation","renderEditInputs","fetchEditInputsData","renderEditInputsData","inputKey","location","pathname","split","itemIndex","inputs","editWordHandler","inputRuValue","inputEngValue","inputKeyValue","editItemKey","newData","editWord","tooltipContent","setAttribute","removeAttribute","trigger","edit","getState","App","path","component","Boolean","hostname","match","initialState","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d2354a82.chunk.js","sourcesContent":["import axios from \"axios\"\nimport { CHANGE_ROLE_SUCCESS, CHOICE_ROLE_SUCCESS, FETCH_NAV_SUCCESS } from \"./actionTypes\"\n\nexport function fetchNav() {\n    return async dispatch => {\n        axios\n            .get(\"https://translate-admin-add74.firebaseio.com/rolesData.json\")\n            .then((response) => {\n                const rolesData = response.data\n                dispatch(fetchNavSuccess(rolesData))\n            })\n            .catch((error) => {\n                console.log(error)\n            })\n    }\n}\n\nexport function fetchNavSuccess(rolesData) {\n    return {\n        type: FETCH_NAV_SUCCESS,\n        rolesData: rolesData\n    }\n}\n\nexport function changeRole(newRole) {\n    return async dispatch => {\n        const newRoleData = {\n            moderator: false,\n            editor: false\n        }\n        \n        if (newRole === \"moderator\") {\n            newRoleData.moderator = true\n            newRoleData.editor = false\n        } else if (newRole === \"editor\") {\n            newRoleData.moderator = false\n            newRoleData.editor = true\n        }\n        \n        axios.put(`https://translate-admin-add74.firebaseio.com/rolesData.json`, newRoleData)\n             .then(() => {\n                 return axios.get(\"https://translate-admin-add74.firebaseio.com/rolesData.json\")\n             })\n             .then((response) => {\n                 const newRolesData = response.data\n                 dispatch(changeRoleSuccess(newRolesData))\n             })\n             .catch((error) => {\n                 console.log(error)\n             })\n    }\n} \n\nexport function changeRoleSuccess(newRolesData) {\n    return {\n        type: CHANGE_ROLE_SUCCESS,\n        rolesData: newRolesData\n    }\n}\n\nexport function choiceRole(role) {\n    return async dispatch => {\n        let rolesData = {\n            moderator: false,\n            editor: false\n        }\n        if (role === \"moderator\") {\n            rolesData.moderator = true\n            rolesData.editor = false\n        } else if (role === \"editor\") {\n            rolesData.moderator = false\n            rolesData.editor = true\n        }\n\n        axios.put(`https://translate-admin-add74.firebaseio.com/rolesData.json`, rolesData)\n             .then((response) => {\n                const rolesData = response.data\n                dispatch(choiceRoleSuccess(rolesData))\n             })\n             .catch((error) => {\n                console.log(error)\n             })\n    }\n} \n\nexport function choiceRoleSuccess(rolesData) {\n    return {\n        type: CHOICE_ROLE_SUCCESS,\n        rolesData: rolesData\n    }\n}","export const FETCH_TABLE_SUCCESS = \"FETCH_TABLE_SUCCESS\"\n\nexport const ADD_NEW_WORD_SUCCESS = \"ADD_NEW_WORD_SUCCESS\"\nexport const ADD_NEW_WORD_ALERT_CLOSE = \"ADD_NEW_WORD_ALERT_CLOSE\"\n\nexport const DELETE_TABLE_ITEM = \"DELETE_TABLE_ITEM\"\n\nexport const EDIT_WORD_SUCCESS = \"EDIT_WORD_SUCCESS\"\nexport const EDIT_WORD_ALERT_CLOSE = \"EDIT_WORD_ALERT_CLOSE\"\n\nexport const CHANGE_ROLE_SUCCESS = \"CHANGE_ROLE_SUCCESS\"\nexport const CHOICE_ROLE_SUCCESS = \"CHOICE_ROLE_SUCCESS\"\nexport const FETCH_NAV_SUCCESS = \"FETCH_NAV_SUCCESS\"\n\nexport const FETCH_EDIT_INPUTS_DATA_SUCCESS = \"FETCH_EDIT_INPUTS_DATA_SUCCESS\"","import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport { choiceRole } from \"../../store/actions/auth\"\n\nclass Authorization extends React.Component {\n\n    choiceRoleHandler = (event) => {\n        const role = event.target.getAttribute(\"data-role-choice\")\n        this.props.choiceRole(role)\n    }\n\n    render() {\n        return (\n            <div className=\"container text-center\">\n                <h1 style={{\"marginTop\": 120}}>Авторизация (дэмо)</h1>\n                <Link \n                    to=\"/main-table\" \n                    onClick={ this.choiceRoleHandler } \n                    data-role-choice=\"moderator\" \n                    type=\"button\" \n                    className=\"btn btn-primary mt-5 d-block w-25 mx-auto\">\n                        <i className=\"fas fa-sign-in-alt mr-1\"></i> Войти как модератор\n                </Link>\n                <Link \n                    to=\"/main-table\" \n                    onClick={ this.choiceRoleHandler } \n                    data-role-choice=\"editor\" \n                    type=\"button\" \n                    className=\"btn btn-primary mt-4 d-block w-25 mx-auto\">\n                        <i className=\"fas fa-sign-in-alt mr-1\"></i> Войти как редактор\n                </Link>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        roles: state.auth.rolesData,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        choiceRole: (role) => dispatch(choiceRole(role)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Authorization)","import React from \"react\"\nimport { Link } from \"react-router-dom\"\n\nfunction Navbar(props) {\n    return (\n        <nav className=\"navbar navbar-light bg-light mb-5\">\n            <div className=\"container\">\n                <Link to=\"/main-table\" className=\"navbar-brand mb-0 h1 text-primary\">Translate-admin</Link>\n                {\n                    props.isHideRole\n                    ?   null\n                    :   <div className=\"dropdown\">\n                            <button \n                                className=\"btn btn-outline-primary btn-sm dropdown-toggle\" \n                                type=\"button\" id=\"dropdownMenuButton\" \n                                data-toggle=\"dropdown\" \n                                aria-haspopup=\"true\" \n                                aria-expanded=\"false\">\n                                    <i className=\"fas fa-user mr-2\"></i> Текущая роль: {props.currentRole}\n                            </button>\n                            <div className=\"dropdown-menu w-100\" aria-labelledby=\"dropdownMenuButton\">\n                                <button \n                                    className={`dropdown-item ${props.moderatorActive}`} \n                                    onClick={props.changeRole} \n                                    data-role=\"moderator\">\n                                        Модератор</button>\n                                <button \n                                    className={`dropdown-item ${props.editorActive}`} \n                                    onClick={props.changeRole} \n                                    data-role=\"editor\">\n                                        Редактор</button>\n                            </div>\n                        </div>\n                }\n            </div>\n        </nav>\n    )\n}\n\nexport default Navbar;","import React from \"react\"\nimport Navbar from \"./Navbar\"\nimport { connect } from \"react-redux\"\nimport { changeRole, fetchNav } from \"../../store/actions/auth\"\n\nclass NavbarRender extends React.Component {\n    componentDidMount() {\n        this.props.fetchNav()\n    }\n\n    changeRoleHandler = (event) => {\n        const newRole = event.target.getAttribute(\"data-role\")\n        this.props.changeRole(newRole)\n    }\n\n    render() {\n        return (\n            <Navbar\n                currentRole = {this.props.roles.moderator ? \"модератор\" : \"редактор\"}\n                moderatorActive = {this.props.roles.moderator ? \"active\" : \"\"}\n                editorActive = {this.props.roles.editor ? \"active\" : \"\"}\n                changeRole = { this.changeRoleHandler }\n                isHideRole = {this.props.isHideRole}\n            >\n            </Navbar>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        roles: state.auth.rolesData,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        changeRole: (newRole) => dispatch(changeRole(newRole)),\n        fetchNav: () => dispatch(fetchNav())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavbarRender)","import React from \"react\"\n\nfunction Table(props) {\n    return (\n        <table className=\"table table-striped mb-5\">\n            <thead className=\"thead-dark\">\n                <tr>\n                    <th className=\"align-middle\" scope=\"col\">Ключ</th>\n                    <th className=\"align-middle\" scope=\"col\">Русский перевод</th>\n                    <th className=\"align-middle\" scope=\"col\">Английский перевод</th>\n                    <th className=\"align-middle\" scope=\"col\">Статус</th>\n                    <th className=\"align-middle\" scope=\"col\">Дата создания</th>\n                    <th className=\"align-middle\" scope=\"col\">Действия</th>\n                </tr>\n            </thead>\n            <tbody>\n                {props.tableRows}\n            </tbody>\n        </table>\n    )\n}\n\nexport default Table;","import React from \"react\"\nimport { Link } from \"react-router-dom\"\n\nfunction TableRow(props) {\n    return (\n        <tr>\n            <td className=\"align-middle\">{props.translateKey}</td>\n            <td className=\"align-middle\">{props.translateRu}</td>\n            <td className=\"align-middle\">{props.translateEng}</td>\n            <td className=\"align-middle\">\n                {\n                    props.isTranslateDone \n                        ? <span className=\"badge badge-pill badge-success\">Переведено</span>\n                        : <span className=\"badge badge-pill badge-danger\">Не переведено</span>\n                }\n            </td>\n            <td className=\"align-middle date-row\">{props.translateDate}</td>\n            <td className=\"align-middle\">\n                <Link\n                    to={`/edit-translation/${props.translateKey}`} \n                    type=\"button\" \n                    className=\"btn btn-link btn-sm d-block\" \n                    style={{\"textAlign\": \"left\"}}\n                    data-target-key={props.translateKey} \n                    onClick={props.onClickEdit}>\n                        <i className=\"far fa-edit\"></i> Редактировать\n                </Link>\n                <button \n                    type=\"button\" \n                    className=\"btn btn-link btn-sm d-block\" \n                    data-target-key={props.translateKey} \n                    onClick={props.onClickDelete} \n                    >\n                        <i className=\"far fa-trash-alt\"></i> Удалить\n                </button>\n            </td>\n        </tr>\n    )\n}\n\nexport default TableRow","import axios from \"axios\"\nimport { FETCH_TABLE_SUCCESS, DELETE_TABLE_ITEM } from \"./actionTypes\"\n\nexport function fetchTable() {\n    return async dispatch => {\n        axios.get(\"https://translate-admin-add74.firebaseio.com/translateTableData.json\")\n             .then((response) => {\n                 const arr = Object.values(response.data)\n                 const arrKeys = Object.keys(response.data)\n                 dispatch(fetchTableSuccess(arr, arrKeys))\n             })\n             .catch((error) => {\n                 console.log(error)\n             })\n    }\n}\n\nexport function fetchTableSuccess(arr, arrKeys) {\n    return {\n        type: FETCH_TABLE_SUCCESS,\n        translateTableData: arr,\n        translateTableDataKeys: arrKeys,\n    }\n}\n\nexport function deleteFromTable(clickTarget, arr, arrKeys) {\n    return dispatch => {\n        const targetData = clickTarget.getAttribute(\"data-target-key\")\n\n        let deleteItemIndex\n        arr.forEach((item, index) => {\n            if (item.key === targetData) {\n                deleteItemIndex = index\n            }\n            return deleteItemIndex\n        })\n\n        let deleteItemKey = arrKeys[deleteItemIndex]\n\n        axios.delete(`https://translate-admin-add74.firebaseio.com/translateTableData/${deleteItemKey}.json`)\n             .then(() => {\n                 return axios.get(\"https://translate-admin-add74.firebaseio.com/translateTableData.json\")\n             })\n             .then((response) => {\n                 let arr = []\n                 let arrKeys = []\n                 if (response.data !== null) {\n                     arr = Object.values(response.data)\n                     arrKeys = Object.keys(response.data)\n                 }\n                 dispatch(deleteTableItem(arr, arrKeys))\n             })\n             .catch((error) => {\n                 console.log(error)\n             })\n    }\n}\n\nexport function deleteTableItem(arr, arrKeys) {\n    return {\n        type: DELETE_TABLE_ITEM,\n        translateTableData: arr,\n        translateTableDataKeys: arrKeys,\n    }\n}","import React from \"react\"\nimport NavbarRender from \"../../UI components/Navbar/NavbarRender\"\nimport Table from \"../../UI components/Table/Table\"\nimport TableRow from \"../../UI components/Table/TableRow\"\nimport { Link } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport { fetchTable, deleteFromTable } from \"../../store/actions/table\"\n\nclass MainTable extends React.Component {\n\n    componentDidMount() {\n        this.props.fetchTable()\n        document.querySelectorAll(\".tooltip\").forEach(element => element.remove());\n    }\n\n    deleteHandler = (event) => {\n        const clickTarget = event.target\n        const arr = this.props.translateTableData\n        const arrKeys = this.props.translateTableDataKeys\n        this.props.deleteFromTable(clickTarget, arr, arrKeys)\n    }\n\n    renderRows = () => {\n        return this.props.translateTableData.map((row, index) => {\n            return (\n                <TableRow\n                    key={index}\n                    translateKey={row.key}\n                    translateRu={row.ru}\n                    translateEng={row.eng}\n                    translateDate={row.date}\n                    isTranslateDone={\n                        row.ru.length > 0 && row.eng.length > 0\n                            ? true\n                            : false\n                    }\n                    onClickDelete={this.deleteHandler}\n                    onClickEdit={this.editHandler}\n                ></TableRow>\n            )\n        })\n    }\n\n    renderAddBtn = () => {\n        if (this.props.roles.moderator === true) {\n            return (\n                <Link to=\"/add-translation\" type=\"button\" className=\"btn btn-success float-right\">\n                    <i className=\"fas fa-plus mr-1\"></i> Добавить слово\n                </Link>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <NavbarRender></NavbarRender>\n                <div className=\"container\">\n                    <h3 className=\"float-left mb-5\">Список слов для перевода</h3>\n                    { this.renderAddBtn() }\n                    <Table tableRows={ this.renderRows() }></Table>\n                    {\n                        this.props.translateTableData.length === 0\n                            ? <h5 className=\"text-secondary\">Cлова для перевода отсутствуют</h5>\n                            : null\n                    }\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        translateTableData: state.table.translateTableData,\n        translateTableDataKeys: state.table.translateTableDataKeys,\n        roles: state.auth.rolesData,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        fetchTable: () => dispatch(fetchTable()),\n        deleteFromTable: (clickTarget, arr, arrKeys) => dispatch(deleteFromTable(clickTarget, arr, arrKeys))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainTable)","import React from \"react\"\n\nfunction Input(props) {\n    return (\n        <div className=\"form-group mb-4\">\n            <label htmlFor={props.id}>{props.label}</label>\n            <input \n                type=\"text\" \n                className=\"form-control\" \n                id={props.id} \n                placeholder={props.placeholder} \n                value={props.value} \n                onChange={props.onChange} \n                readOnly={props.isDisabled} \n                data-toggle=\"tooltip\" \n                data-placement=\"top\" \n                title={props.titleTooltip}\n                required \n            />\n            <div className=\"invalid-feedback\">\n                Поле обязательно для заполнения\n            </div>\n        </div>\n    )\n}\n\nexport default Input;","export function onChangeKeyInput() {\n\n    const keyInput = document.querySelector(\"#key\")\n\n    if (keyInput.value !== \"\") {\n        keyInput.classList.remove(\"is-invalid\")\n    }\n\n    if (keyInput.hasAttribute(\"readonly\") === false) {\n        let regKeyInput = /^[a-zA-Z0-9_]+$/;\n        if (!regKeyInput.test(keyInput.value) && keyInput.value.length > 0) {\n            keyInput.classList.add(\"is-invalid\")\n            keyInput.nextSibling.innerHTML = \"Поле ключа может содержать только буквы английского алфавита, цифры и знак нижнего подчеркивания\"\n        } else if (keyInput.value.length === 0) {\n            keyInput.classList.add(\"is-invalid\")\n            keyInput.nextSibling.innerHTML = \"Поле обязательно для заполнения\"\n        } else {\n            keyInput.classList.add(\"is-valid\")\n            keyInput.nextSibling.innerHTML = \"Поле обязательно для заполнения\"\n        }\n    }\n}\n\nexport function onChangeRuInput() {\n\n    const translateRuInput = document.querySelector(\"#translateRu\")\n\n    if (translateRuInput.value !== \"\") {\n        translateRuInput.classList.remove(\"is-invalid\")\n    }\n\n    let regTranslateRuInput = /^[а-яА-Я ]+$/;\n    if (!regTranslateRuInput.test(translateRuInput.value) && translateRuInput.value.length > 0 && translateRuInput.value.trim().length > 0) {\n        translateRuInput.classList.add(\"is-invalid\")\n        translateRuInput.nextSibling.innerHTML = \"Поле русского перевода может содержать только буквы русского алфавита и пробелы\"\n    } else if (translateRuInput.value.length === 0 || translateRuInput.value.trim().length === 0) {\n        translateRuInput.classList.add(\"is-invalid\")\n        translateRuInput.nextSibling.innerHTML = \"Поле обязательно для заполнения\"\n    } else {\n        translateRuInput.classList.add(\"is-valid\")\n        translateRuInput.nextSibling.innerHTML = \"Поле обязательно для заполнения\"\n    }\n}\n\n\nexport function onChangeEngInput() {\n\n    const translateEngInput = document.querySelector(\"#translateEng\")\n\n    if (translateEngInput.value !== \"\") {\n        translateEngInput.classList.remove(\"is-invalid\")\n    }\n\n    if (translateEngInput.hasAttribute(\"readonly\") === false) {\n        let regtranslateEngInput = /^[a-zA-Z ]+$/;\n        if (!regtranslateEngInput.test(translateEngInput.value) && translateEngInput.value.length > 0) {\n            translateEngInput.classList.add(\"is-invalid\")\n            translateEngInput.nextSibling.innerHTML = \"Поле английского перевода может содержать только буквы английского алфавита и пробелы\"\n        } else if (translateEngInput.value.length === 0) {\n            translateEngInput.classList.add(\"is-invalid\")\n            translateEngInput.nextSibling.innerHTML = \"Поле обязательно для заполнения\"\n        } else {\n            translateEngInput.classList.add(\"is-valid\")\n            translateEngInput.nextSibling.innerHTML = \"Поле обязательно для заполнения\"\n        }\n    }\n}","import React from \"react\"\nimport NavbarRender from \"../../UI components/Navbar/NavbarRender\"\nimport Input from \"../../UI components/Input/Input\"\nimport { Link } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport { addNewWord } from \"../../store/actions/add\"\nimport { onChangeKeyInput, onChangeRuInput } from \"../../helperFunctions/forms\"\n\nclass AddTranslation extends React.Component {\n\n    componentDidMount() {\n        window.$('[data-toggle=\"tooltip\"]').tooltip();\n    }\n\n    renderInputs = () => {\n        return this.props.inputsData.map((input, index) => {\n            return (\n                <Input\n                    key={index}\n                    id={input.id}\n                    label={input.label}\n                    placeholder={input.placeholder}\n                    isDisabled={input.isDisabled}\n                    onChange={\n                        input.id === \"key\" ?\n                            onChangeKeyInput\n                        : input.id === \"translateRu\" ?\n                            onChangeRuInput\n                        : null\n                    }\n                    titleTooltip={\n                        input.id === \"translateEng\" && input.isDisabled\n                            ? \"Данное поле заполняет редактор\"\n                            : null\n                    }\n                ></Input>\n            )\n        })\n    }\n\n    showAlert = () => {\n        return (\n            <div\n                className=\"alert alert-success position-absolute text-center\"\n                role=\"alert\"\n                style={{ left: 0, right: 0, marginLeft: \"auto\", marginRight: \"auto\", width: 360 }}\n            >\n                Слово успешно добавлено в <Link to=\"/main-table\" className=\"alert-link\">таблицу</Link>\n            </div>\n        )\n    }\n\n    checkSubmitHandler = (event) => {\n        event.preventDefault()\n        const keyInput = document.querySelector(\"#key\")\n        const translateRuInput = document.querySelector(\"#translateRu\")\n\n        if (keyInput.value === \"\") {\n            keyInput.classList.add(\"is-invalid\")\n        }\n\n        if (translateRuInput.value === \"\") {\n            translateRuInput.classList.add(\"is-invalid\")\n        }\n\n        if (keyInput.classList.contains(\"is-valid\") && translateRuInput.classList.contains(\"is-valid\")) {\n            this.props.addNewWord()\n            keyInput.classList.remove(\"is-valid\")\n            translateRuInput.classList.remove(\"is-valid\")\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <NavbarRender isHideRole={true}></NavbarRender>\n                <div className=\"container\">\n                    {\n                        this.props.isShowAlert === true\n                            ? this.showAlert()\n                            : null\n                    }\n                    <h3 className=\"mb-5\">Добавление слова</h3>\n                    <form className=\"w-50 needs-validation\" noValidate>\n                        {this.renderInputs()}\n                        <button className=\"btn btn-success\" type=\"submit\" onClick={this.checkSubmitHandler}>\n                            <i className=\"fas fa-plus mr-1\"></i> Добавить слово\n                        </button>\n                    </form>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        inputsData: state.add.inputsData,\n        isShowAlert: state.add.isShowAlert,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        addNewWord: () => dispatch(addNewWord()),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTranslation)","import axios from \"axios\"\nimport { ADD_NEW_WORD_SUCCESS, ADD_NEW_WORD_ALERT_CLOSE } from \"./actionTypes\"\n\nexport function addNewWord() {\n    return async dispatch => {\n        const translateKeyInput = document.querySelector(\"#key\")\n        const translateRuInput = document.querySelector(\"#translateRu\")\n        \n        function timeAdjustment(time) {\n            if (time < 10) {\n                time=\"0\" + time;\n            }\n            return time;\n        }\n        const translateDate = timeAdjustment(new Date().getHours()) + \":\" +\n                                timeAdjustment(new Date().getMinutes()) + \":\" +\n                                timeAdjustment(new Date().getSeconds())  + \" \" + \n                                new Date().getDate() + \"/\" + \n                                new Date().getMonth() + 1 + \"/\" + \n                                new Date().getFullYear()\n\n        const newWord = {\n            key: translateKeyInput.value,\n            ru: translateRuInput.value,\n            eng: \"\",\n            date: translateDate,\n            isDone: false\n        }\n\n        axios.post(\"https://translate-admin-add74.firebaseio.com/translateTableData.json\", newWord)\n             .catch((error) => {\n                console.log(error)\n             })\n\n        translateKeyInput.value = \"\"\n        translateRuInput.value = \"\"\n        dispatch(addNewWordSuccess())\n        setTimeout(() => dispatch(addNewWordAlertClose()), 2500)\n    }\n}\n\nexport function addNewWordSuccess() {\n    return {\n        type: ADD_NEW_WORD_SUCCESS,\n        isShowAlert: true\n    }\n}\n\nexport function addNewWordAlertClose() {\n    return {\n        type: ADD_NEW_WORD_ALERT_CLOSE,\n        isShowAlert: false\n    }\n}","import axios from \"axios\"\nimport { EDIT_WORD_SUCCESS, EDIT_WORD_ALERT_CLOSE, FETCH_EDIT_INPUTS_DATA_SUCCESS } from \"./actionTypes\"\n\nexport function editWord(newData, editItemKey) {\n    return async dispatch => {\n        axios.put(`https://translate-admin-add74.firebaseio.com/translateTableData/${editItemKey}.json`, newData)\n             .catch((error) => {\n                 console.log(error)\n             })\n        dispatch(editWordSuccess())\n        setTimeout(() => dispatch(editWordAlertClose()), 2500)\n    }\n}\n\nexport function editWordSuccess() {\n    return {\n        type: EDIT_WORD_SUCCESS,\n        isShowAlert: true\n    }\n}\n\nexport function editWordAlertClose() {\n    return {\n        type: EDIT_WORD_ALERT_CLOSE,\n        isShowAlert: false\n    }\n}\n\nexport function fetchEditInputsData() {\n    return async (dispatch, getState) => {\n        axios\n            .get(\"https://translate-admin-add74.firebaseio.com/rolesData.json\")\n            .then((response) => {\n                let newInputsEditData = [\n                    ...getState().edit.inputsEditData\n                ]\n                if (response.data.editor === true) {\n                    newInputsEditData[0].isDisabled = true\n                    newInputsEditData[1].isDisabled = false\n                    newInputsEditData[2].isDisabled = false\n                } else if (response.data.moderator === true) {\n                    newInputsEditData[0].isDisabled = false\n                    newInputsEditData[1].isDisabled = false\n                    newInputsEditData[2].isDisabled = true\n                }\n                dispatch(fetchEditInputsDataSuccess(newInputsEditData))\n            })\n            .catch((error) => {\n                console.log(error)\n            })\n    }\n}\n\nexport function fetchEditInputsDataSuccess(newInputsEditData) {\n    return {\n        type: FETCH_EDIT_INPUTS_DATA_SUCCESS,\n        inputsEditData: newInputsEditData\n    }\n}","import React from \"react\"\nimport NavbarRender from \"../../UI components/Navbar/NavbarRender\"\nimport Input from \"../../UI components/Input/Input\"\nimport axios from \"axios\"\nimport { Link } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport { editWord, fetchEditInputsData } from \"../../store/actions/edit\"\nimport { onChangeKeyInput, onChangeRuInput, onChangeEngInput } from \"../../helperFunctions/forms\"\n\nclass EditTranslation extends React.Component {\n\n    componentDidMount() {\n        this.renderEditInputsData()\n    }\n\n    componentDidUpdate() {\n        this.tooltipContent()\n    }\n\n    renderEditInputs = () => {\n        this.props.fetchEditInputsData()\n        return this.props.inputsEditData.map((input, index) => {\n            return (\n                <Input\n                    key={index}\n                    id={input.id}\n                    label={input.label}\n                    placeholder={input.placeholder}\n                    isDisabled={input.isDisabled}\n                    onChange={\n                        input.id === \"key\" ? \n                            onChangeKeyInput\n                        : input.id === \"translateRu\" ? \n                            onChangeRuInput\n                        : input.id === \"translateEng\" ? \n                            onChangeEngInput\n                        : null\n                    }\n                ></Input>\n            )\n        })\n    }\n\n    renderEditInputsData = () => {\n        const pathArray = window.location.pathname.split('/')\n        const inputKey = pathArray[2]\n        axios\n        .get(\"https://translate-admin-add74.firebaseio.com/translateTableData.json\")\n        .then((response) => {\n            const arr = Object.values(response.data)\n\n            let itemIndex\n            arr.forEach((item, index) => {\n                if (item.key === inputKey) {\n                    itemIndex = index\n                }\n                return itemIndex\n            })\n\n            const inputs = document.querySelectorAll(\"input\")\n            inputs[0].value = arr[itemIndex].key\n            inputs[1].value = arr[itemIndex].ru\n            inputs[2].value = arr[itemIndex].eng\n        })\n        .catch((error) => {\n            console.log(error)\n        })\n    }\n\n    checkSubmitHandler = (event) => {\n        event.preventDefault()\n        const keyInput = document.querySelector(\"#key\")\n        const translateEngInput = document.querySelector(\"#translateEng\")\n        const translateRuInput = document.querySelector(\"#translateRu\")\n\n        if (translateRuInput.value === \"\") {\n            translateRuInput.classList.add(\"is-invalid\")\n        }\n\n        if (!translateRuInput.classList.contains(\"is-invalid\") \n        && !translateEngInput.classList.contains(\"is-invalid\") \n        && !keyInput.classList.contains(\"is-invalid\")) {\n\n            this.editWordHandler()\n            translateEngInput.classList.remove(\"is-valid\")\n            translateRuInput.classList.remove(\"is-valid\")\n            keyInput.classList.remove(\"is-valid\")\n        }\n    }\n\n    editWordHandler = () => {\n        const inputs = document.querySelectorAll(\"input\")\n        const inputRuValue = inputs[1].value\n        const inputEngValue = inputs[2].value\n        const inputKeyValue = inputs[0].value\n        const pathArray = window.location.pathname.split('/')\n        const inputKey = pathArray[2]\n\n        axios.get(\"https://translate-admin-add74.firebaseio.com/translateTableData.json\")\n             .then((response) => {\n                 const arr = Object.values(response.data)\n                 const arrKeys = Object.keys(response.data)\n\n                 let itemIndex\n                 arr.forEach((item, index) => {\n                     if (item.key === inputKey) {\n                         itemIndex = index\n                     }\n                     return itemIndex\n                 })\n\n                 let editItemKey = arrKeys[itemIndex]\n                 const newData = {\n                     ...arr[itemIndex],\n                     key: inputKeyValue,\n                     eng: inputEngValue,\n                     ru: inputRuValue\n                 }\n                 this.props.editWord(newData, editItemKey)\n             })\n             .catch((error) => {\n                 console.log(error)\n             })\n    }\n\n    showAlert = () => {\n        return (\n            <div \n                className=\"alert alert-success position-absolute text-center\" \n                role=\"alert\"\n                style={{ left: 0, right: 0, marginLeft: \"auto\", marginRight: \"auto\", width: 360}}\n            >\n                Слово успешно отредактировано\n                <Link to=\"/main-table\" className=\"alert-link\"> в таблице переводов</Link>\n            </div>\n        )\n    }\n\n    tooltipContent = () => {\n        const inputs = document.querySelectorAll(\"input\")\n        let currentRole\n        if (this.props.roles.editor === true) {\n            currentRole = \"модератор\"\n        } else {\n            currentRole = \"редактор\"\n        }\n        inputs.forEach(element => {\n            if (element.hasAttribute(\"readonly\") === true) {\n                element.setAttribute('data-original-title', `Данное поле заполняет ${currentRole}`)\n            } else {\n                element.removeAttribute('data-original-title')\n            }\n        })\n        window.$('[readonly]').tooltip({\n            trigger : \"hover\"\n        })\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <NavbarRender></NavbarRender>\n                <div className=\"container\">\n                    {\n                        this.props.isShowAlert === true\n                        ? this.showAlert()\n                        : null\n                    }\n                    <h3 className=\"mb-5\">Редактирование слова</h3>\n                    <form className=\"w-50 needs-validation\" noValidate>\n                        { this.renderEditInputs() }\n                        <button type=\"submit\" className=\"btn btn-success\" onClick={ this.checkSubmitHandler }> \n                            <i className=\"fas fa-save mr-1\"></i> Сохранить изменения\n                        </button>\n                    </form>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        inputsEditData: state.edit.inputsEditData,\n        isShowAlert: state.edit.isShowAlert,\n        roles: state.auth.rolesData,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        editWord: (newData, editItemKey) => dispatch(editWord(newData, editItemKey)),\n        fetchEditInputsData: () => dispatch(fetchEditInputsData())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTranslation)","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport {Route, Switch} from \"react-router-dom\"\nimport Authorization from \"./screens/Authorization/Authorization\"\nimport MainTable from \"./screens/MainTable/MainTable\"\nimport AddTranslation from \"./screens/AddTranslation/AddTranslation\"\nimport EditTranslation from \"./screens/EditTranslation/EditTranslation\"\n\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/main-table\" component={MainTable} />\n      <Route path=\"/add-translation\" component={AddTranslation} />\n      <Route path=\"/edit-translation/:translateKey\" component={EditTranslation} />\n      <Route path=\"/\" component={Authorization} />\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { FETCH_TABLE_SUCCESS, DELETE_TABLE_ITEM } from \"../actions/actionTypes\"\n\nconst initialState = {\n    translateTableData: [],\n    translateTableDataKeys: [],\n}\n\nexport default function tableReducer(state = initialState, action) {\n    switch(action.type) {\n        case FETCH_TABLE_SUCCESS:\n            return {\n                ...state, \n                translateTableData: action.translateTableData, \n                translateTableDataKeys: action.translateTableDataKeys\n            } \n        case DELETE_TABLE_ITEM:\n            return {\n                ...state, \n                translateTableData: action.translateTableData, \n                translateTableDataKeys: action.translateTableDataKeys\n            }\n        default:\n            return state\n    }\n}","import { ADD_NEW_WORD_SUCCESS, ADD_NEW_WORD_ALERT_CLOSE } from \"../actions/actionTypes\"\n\nconst initialState = {\n    inputsData: [\n        {\n            id: \"key\",\n            label: \"Ключ\",\n            placeholder: \"Введите ключ\",\n            isDisabled: false,\n            \n        },\n        {\n            id: \"translateRu\",\n            label: \"Русский перевод\",\n            placeholder: \"Введите слово на русском\",\n            isDisabled: false,\n            \n        },\n        {\n            id: \"translateEng\",\n            label: \"Английский перевод\",\n            placeholder: \"Введите слово на английском\",\n            isDisabled: true\n        },\n    ],\n    isShowAlert: false\n}\n\nexport default function addReducer(state = initialState, action) {\n    switch(action.type) {\n        case ADD_NEW_WORD_SUCCESS:\n            return {\n                ...state, isShowAlert: action.isShowAlert\n            }\n        case ADD_NEW_WORD_ALERT_CLOSE:\n            return {\n                ...state, isShowAlert: action.isShowAlert\n            }\n        default:\n            return state\n    }\n}","import { EDIT_WORD_SUCCESS, EDIT_WORD_ALERT_CLOSE, FETCH_EDIT_INPUTS_DATA_SUCCESS } from \"../actions/actionTypes\"\n\nconst initialState = {\n    inputsEditData: [\n        {\n            id: \"key\",\n            label: \"Ключ\",\n            placeholder: \"Введите ключ\",\n            isDisabled: true,\n        },\n        {\n            id: \"translateRu\",\n            label: \"Русский перевод\",\n            placeholder: \"Введите слово на русском\",\n            isDisabled: false,\n        },\n        {\n            id: \"translateEng\",\n            label: \"Английский перевод\",\n            placeholder: \"Введите слово на английском\",\n            isDisabled: false,\n        },\n    ],\n    isShowAlert: false\n}\n\nexport default function editReducer(state = initialState, action) {\n    switch(action.type) {\n        case FETCH_EDIT_INPUTS_DATA_SUCCESS:\n            return {\n                ...state, inputsEditData: action.inputsEditData\n            }\n        case EDIT_WORD_SUCCESS:\n            return {\n                ...state, isShowAlert: action.isShowAlert\n            }\n        case EDIT_WORD_ALERT_CLOSE:\n            return {\n                ...state, isShowAlert: action.isShowAlert\n            }\n        default:\n            return state\n    }\n}","import { CHANGE_ROLE_SUCCESS, FETCH_NAV_SUCCESS, CHOICE_ROLE_SUCCESS } from \"../actions/actionTypes\"\n\nconst initialState = {\n    rolesData: {}\n}\n\nexport default function authReducer(state = initialState, action) {\n    switch(action.type) {\n        case CHOICE_ROLE_SUCCESS:\n            return {\n                ...state,\n                rolesData: action.rolesData, \n            } \n        case FETCH_NAV_SUCCESS:\n            return {\n                ...state, \n                rolesData: action.rolesData, \n            } \n        case CHANGE_ROLE_SUCCESS:\n            return {\n                ...state, \n                rolesData: action.rolesData, \n            } \n        default:\n            return state\n    }\n}","import { combineReducers } from \"redux\"\nimport tableReducer from \"./table\"\nimport addReducer from \"./add\"\nimport editReducer from \"./edit\"\nimport authReducer from \"./auth\"\n\nexport default combineReducers({\n    auth: authReducer,\n    table: tableReducer,\n    add: addReducer,\n    edit: editReducer\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, compose, applyMiddleware } from \"redux\" \nimport thunk from \"redux-thunk\"\nimport { Provider } from \"react-redux\"\nimport rootReducer from \"./store/reducers/rootReducer\"\n\nconst composeEnhancers =\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n    }) : compose;\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n)\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}